(function(){var d,c;if(typeof window==="undefined"){d=require("underscore");c=require("backbone");exports=module.exports=c}else{d=window._;c=window.Backbone;exports=window}c.Many="Many";c.One="One";c.AssociatedModel=c.Model.extend({relations:undefined,set:function(a,b,f){var g,h;if(d.isObject(a)||a==null){g=a;f=b}else{g={};g[a]=b}f||(f={});if(!g)return this;if(f.unset)for(attr in g)g[attr]=void 0;this.relations&&d.each(this.relations,function(j){var e=j.key,k=j.relatedModel,i=j.collectionType;if(g[e]!=
undefined){var l=p(g,e);k&&d.isString(k)&&(k=eval(k));i&&d.isString(i)&&(i=eval(i));var m=false,n=j.options?d.extend({},j.options,f):f;if(j.type===c.Many){if(i&&!i.prototype instanceof c.Collection)throw Error("collectionType must inherit from Backbone.Collection");if(!this.attributes[e]){this.attributes[e]=i?new i:this._createCollection(k);m=true}if(l instanceof c.Collection)l=l.models;this.attributes[e].reset(l,n)}else if(j.type==c.One&&k){if(this.attributes[e]){var q={},r=p(this.attributes[e],
"defaults");d.each(this.attributes[e].attributes,function(s,o){!d.has(l,o)&&(q[o]=r?r[o]:void 0)});this.attributes[e].set(q,{silent:true})}else{if(l instanceof c.AssociatedModel)return this;this.attributes[e]=new k;m=true}this.attributes[e].set(l,n)}this.attributes[e].off("all");this.attributes[e].on("all",function(){return this.trigger.apply(this,arguments)},this);m&&this.trigger("change:"+e,this,this.get(e),n);!h&&(h=[]);d.indexOf(h,e)===-1&&h.push(e)}},this);if(h){b={};for(a in g)if(d.indexOf(h,
a)===-1)b[a]=g[a]}else b=g;return c.Model.prototype.set.call(this,b,f)},_createCollection:function(a){var b=a;d.isString(b)&&(b=eval(b));if(b&&b.prototype instanceof c.AssociatedModel){a=new c.Collection;a.model=b}else throw Error("type must inherit from Backbone.AssociatedModel");return a},trigger:function(){if(!this.visitedTrigger){this.visitedTrigger=true;c.Model.prototype.trigger.apply(this,arguments);delete this.visitedTrigger}return this},toJSON:function(){var a;if(!this.visited){this.visited=
true;a=c.Model.prototype.toJSON.apply(this,arguments);this.relations&&d.each(this.relations,function(b){var f=this.attributes[b.key];if(f){aJson=f.toJSON();a[b.key]=d.isArray(aJson)?d.compact(aJson):aJson}},this);delete this.visited}return a},clone:function(){var a;if(!this.visited){this.visited=true;a=c.Model.prototype.clone.apply(this,arguments);this.relations&&d.each(this.relations,function(b){if(this.attributes[b.key]){var f=a.attributes[b.key];if(f instanceof c.Collection){var g=b.collectionType?
new b.collectionType:this._createCollection(b.relatedModel);f.each(function(h){(h=h.clone())&&g.add(h)});a.attributes[b.key]=g}else if(f instanceof c.Model)a.attributes[b.key]=f.clone()}},this);delete this.visited}return a}});var p=function(a,b){if(!(a&&a[b]))return null;return d.isFunction(a[b])?a[b]():a[b]}})();
